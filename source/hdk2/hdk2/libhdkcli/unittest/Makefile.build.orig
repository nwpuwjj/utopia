#
# Copyright (c) 2008-2010 Cisco Systems, Inc. All rights reserved.
#
# Cisco Systems, Inc. retains all right, title and interest (including all
# intellectual property rights) in and to this computer program, which is
# protected by applicable intellectual property laws.  Unless you have obtained
# a separate written license from Cisco Systems, Inc., you are not authorized
# to utilize all or a part of this computer program for any purpose (including
# reproduction, distribution, modification, and compilation into object code),
# and you must immediately destroy or return to Cisco Systems, Inc. all copies
# of this computer program.  If you are licensed by Cisco Systems, Inc., your
# rights to utilize this computer program are limited by the terms of that
# license.  To obtain a license, please contact Cisco Systems, Inc.
#
# This computer program contains trade secrets owned by Cisco Systems, Inc.
# and, unless unauthorized by Cisco Systems, Inc. in writing, you agree to
# maintain the confidentiality of this computer program and related information
# and to not disclose this computer program and related information to any
# other person or entity.
#
# THIS COMPUTER PROGRAM IS PROVIDED AS IS WITHOUT ANY WARRANTIES, AND CISCO
# SYSTEMS, INC. EXPRESSLY DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED,
# INCLUDING THE WARRANTIES OF MERCHANTIBILITY, FITNESS FOR A PARTICULAR
# PURPOSE, TITLE, AND NONINFRINGEMENT.
#

# Location of the HDK
ifndef HDKDIR
HDKDIR = ../..
endif

# Build directory
ifndef BUILDDIR
BUILDDIR = build
endif

# Platform-specific
ifeq ($(shell uname -s), Darwin) # Mac OS X
PLATFORM_CFLAGS =
# gcc on Mac OS X (10.6) doesn't support -rpath-link, hence the -lhdkxml
PLATFORM_LDFLAGS = -lhdkxml
else
PLATFORM_CFLAGS = -pedantic-errors
PLATFORM_LDFLAGS = -Wl,-rpath-link=$(BUILDDIR)
endif

# Targets
EXE = $(BUILDDIR)/unittest

# Object files
OBJS_BASE = \
	unittest.o \
	unittest_util.o \
	unittest_schema.o
OBJS = $(OBJS_BASE:%=$(BUILDDIR)/%)

# Compiler flags
ifdef UNITTEST_CXX
UNITTEST_CC = $(CXX)
UNITTEST_CFLAGS = $(CXXFLAGS)
else
UNITTEST_CC = $(CC)
UNITTEST_CFLAGS = $(CFLAGS) -Wmissing-prototypes
endif
UNITTEST_CFLAGS += -Wall -Wextra -Werror -Wno-long-long $(PLATFORM_CFLAGS)
UNITTEST_CFLAGS += -I. -I../../include -I../../unittest
UNITTEST_CFLAGS += -DHDK_MOD_STATIC
ifdef DEBUG
UNITTEST_CFLAGS += -g
else
UNITTEST_CFLAGS += -Os
endif

# Linker flags
LDFLAGS += -shared-libgcc -L$(BUILDDIR) $(PLATFORM_LDFLAGS) -lhdkcli $(UNITTEST_LDFLAGS) -ldl

# Build target (default)
.PHONY: build
build: $(EXE)

# Clean the build directory
.PHONY: clean
clean:
	rm -r -f $(BUILDDIR)

# Rule for linking the executable
$(EXE): $(OBJS)
	$(UNITTEST_CC) -o $(EXE) $^ $(LDFLAGS)

# Rule for compiling source files
$(BUILDDIR)/%.o: %.c
	$(UNITTEST_CC) -c $(CPPFLAGS) $(UNITTEST_CFLAGS) -o $@ -c $<

# Rule for building source dependency files
$(BUILDDIR)/.%.depend: %.c
	@mkdir -p $(BUILDDIR)
	@$(UNITTEST_CC) -MM $(CPPFLAGS) $(UNITTEST_CFLAGS) $< > $@

# Include dependency files
-include $(OBJS_BASE:%.o=$(BUILDDIR)/.%.depend)
